import os

import click

from ..click.docker import DockerPathExists, wrap_docker
from ..click.lazy import lazy_import

lazy_import(
    globals(),
    """
from ..dump2datamine import generate_datamine_from_dump
""",
)


def check_athena():
    try:
        import athena
    except ImportError:
        return False

    return True


def check_athena_callback(ctx, param, value):
    if not value or ctx.resilient_parsing:
        return

    if ctx.obj["docker"]:
        click.echo(
            f"> docker run -it --net=host --rm --init cmd-iaso dump2datamine --check-athena",
            err=True,
            nl=False,
        )

        ctx.exit()

        return

    if check_athena():
        click.echo(
            click.style(
                "cmd-iaso has been installed with athena analysis support.", fg="green"
            )
        )

        ctx.exit(0)
    else:
        click.echo(
            click.style(
                "cmd-iaso has not been installed with athena analysis support.",
                fg="red",
            )
        )

        ctx.exit(1)


@click.command()
@click.pass_context
@click.argument(
    "dump", type=click.Path(exists=DockerPathExists(), readable=True, file_okay=False)
)
@click.argument(
    "datamine", type=click.Path(exists=False, writable=True, dir_okay=False)
)
@click.option(
    "--analyse",
    is_flag=True,
)
@click.option(
    "--check-athena",
    is_flag=True,
    callback=check_athena_callback,
    expose_value=False,
    is_eager=True,
)
@wrap_docker()
def dump2datamine(ctx, dump, datamine, analyse):
    """
    Generates the DATAMINE file from the DUMP folder.

    \b
    This helper command bridges the gap between the DUMP generated by
    > cmd-iaso scrape [...] DUMP [...]
    and the interactive curation process
    > cmd-iaso curate [...] start resources DATAMINE [...]

    If the --analyse flag is passed, the scraped responses in the DUMP
    folder are analysed to check if the resource providers are working
    as expected. The analysis provides data for the information-content
    validator during resources curation.

    The --analyse flag can only be enabled if cmd-iaso was installed
    with athena analysis support. Please make sure you install it with
    both setuptools-rust and Rust installed (see the README for more
    information on the installation process).

    \b
    You can check whether athena analysis is available by running
    > cmd-iaso dump2datamine --check-athena
    """

    if analyse and not check_athena():
        raise click.UsageError(
            click.style(
                "cmd-iaso has not been installed with athena analysis support. Please make sure you install it with both setuptools-rust and Rust installed.",
                fg="red",
            )
        )

    if os.path.exists(datamine):
        click.confirm(
            f"{datamine} already exists. Do you want to overwrite {datamine} with the new DATAMINE file?",
            abort=True,
        )

    errors = generate_datamine_from_dump(dump, datamine, analyse)

    if len(errors) == 0:
        click.echo(
            click.style(
                f"The scraping DUMP at {dump} was successfully converted into a DATAMINE file at {datamine}.",
                fg="green",
            )
        )
    else:
        num_errors = sum(len(errs) for file, errs in errors.items())

        if num_errors == 1:
            click.echo(
                click.style(
                    f"ERROR: There was one erroneous entry in the {list(errors.keys())[0]} file.",
                    fg="red",
                )
            )
        elif len(errors) == 1:
            click.echo(
                click.style(
                    f"ERROR: There were {num_errors} erroneous entries in the {list(errors.keys())[0]} file.",
                    fg="red",
                )
            )
        else:
            click.echo(
                click.style(
                    f"ERROR: There were a total of {num_errors} erroneous entries in the following files:",
                    fg="red",
                )
            )

            for file in errors.keys():
                click.echo(f"- {file}")
